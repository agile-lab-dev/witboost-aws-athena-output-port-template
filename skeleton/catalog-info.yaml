{% set dataProductMajorVersion = values.identifier.split(".")[2] %}
{% set dataProductName = values.dataproduct.split(".")[1] | replace(" ", "") | replace("-", "") %}
{% set domainName = values.domain.split(":")[1] | replace(" ", "") | replace("-", "") %}
{% set componentName = values.name | replace(" ", "") | replace("-", "") | lower %}
{% set ComponentDependencies = values.dependsOn | list if values.dependsOn else [] %}

apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.identifier }}
  description: ${{ values.description | dump }}
  annotations:
    gitlab.com/project-slug: ${{ values.owner + "/" + values.repo }}
    backstage.io/techdocs-ref: dir:.
  tags:
    - outputport
spec:
  type: outputport
  lifecycle: experimental
  owner: ${{ values.developmentGroup }}
  system: ${{ values.dataproduct | dump }}
  domain: ${{ values.domain | dump }}
  mesh:
    name: ${{ values.name | dump }}
    fullyQualifiedName: ${{ values.domainName }} - ${{ values.dataproductName }} - version ${{ dataProductMajorVersion }} - ${{ values.name }}
    description: ${{ values.description | dump}}
    kind: outputport
    version: ${{ values.identifier.split(".")[2] + ".0.0" }}
    infrastructureTemplateId: ${{ values.infrastructureTemplateId }}
    useCaseTemplateId: ${{ values.useCaseTemplateId }}
    dependsOn:
        {% if values.dependsOn | length > 0 %}
        {% for i in values.dependsOn %}
        - ${{ i }}
        {% endfor %}
        {% else %}{% endif %}
        {% if values.storageArea not in ComponentDependencies %}
        - ${{ values.storageArea }}
        {% endif %}
    platform: AWS
    technology: Athena
    outputPortType: View
    creationDate: ${{ values.creationDate }}
    startDate: ${{ values.creationDate }}
    processDescription: ${{ values.processDescription | dump }}
    dataContract:
      schema: {% if values.schemaColumns | length > 0 %}
      {% for column in values.schemaColumns %}
        {% set primitiveType = column.arrayDataType if column.dataType == "ARRAY" else column.dataType %}
        - name: ${{ column.name }}
          dataType: ${{ column.dataType }}
      {% if column.description %}
          description: ${{ column.description }}
      {% endif %}
      {% if column.constraint and column.constraint != "(no constraint)" %}
          constraint: ${{ column.constraint }}
      {% endif %}
      {% if primitiveType in ["VARCHAR", "CHAR"] and column.dataLength >=0 %}
          dataLength: ${{ column.dataLength }}
      {% endif %}
      {% if primitiveType == "DECIMAL" and column.precision >=0 %}
          precision: ${{ column.precision }}
      {% endif %}
      {% if primitiveType == "DECIMAL" and column.scale >= 0 %}
          scale: ${{ column.scale }}
      {% endif %}

      {% if column.dataType == "ARRAY" and column.arrayDataType %}
          arrayDataType: ${{ column.arrayDataType }}
        {% if column.arrayDataType == "ARRAY" and column.nestedArrayDataType %}
          nestedArrayDataType: ${{column.nestedArrayDataType}}
          {% if column.nestedArrayDataType == "DECIMAL" and column.nestedScale >= 0 %}
          nestedScale: ${{column.nestedScale}}
          {% endif %}
          {% if column.nestedArrayDataType == "DECIMAL" and column.nestedPrecision >=0 %}
          nestedPrecision: ${{column.nestedPrecision}}
          {% endif %}
          {% if column.nestedArrayDataType in ["VARCHAR", "CHAR"] and column.nestedDataLength >=0 %}
          nestedDataLength: ${{column.nestedDataLength}}
          {% endif %}
        {% endif %}
        {% if column.arrayDataType == "MAP" and column.arrayMapKeyType and column.arrayMapValueType %}
          arrayMapKeyType: ${{column.arrayMapKeyType}}
          arrayMapValueType: ${{column.arrayMapValueType}}
          {% if column.arrayMapKeyType == "DECIMAL" and column.arrayMapKeyScale >= 0 %}
          arrayMapKeyScale: ${{column.arrayMapKeyScale}}
          {% endif %}
          {% if column.arrayMapKeyType == "DECIMAL" and column.arrayMapKeyPrecision >=0 %}
          arrayMapKeyPrecision: ${{column.arrayMapKeyPrecision}}
          {% endif %}
          {% if column.arrayMapKeyType in ["VARCHAR", "CHAR"] and column.arrayMapKeyDataLength >=0 %}
          arrayMapKeyDataLength: ${{column.arrayMapKeyDataLength}}
          {% endif %}
          {% if column.arrayMapValueType == "DECIMAL" and column.arrayMapValueScale >= 0 %}
          arrayMapValueScale: ${{column.arrayMapValueScale}}
          {% endif %}
          {% if column.arrayMapValueType == "DECIMAL" and column.arrayMapValuePrecision >=0 %}
          arrayMapValuePrecision: ${{column.arrayMapValuePrecision}}
          {% endif %}
          {% if column.arrayMapValueType in ["VARCHAR", "CHAR"] and column.arrayMapValueDataLength >=0 %}
          arrayMapValueDataLength: ${{column.arrayMapValueDataLength}}
          {% endif %}
        {% endif %}
      {% endif %}

      {% if column.dataType == "MAP" and column.mapKeyType and column.mapValueType %}
          mapKeyType: ${{column.mapKeyType}}
          mapValueType: ${{column.mapValueType}}
          {% if column.mapKeyType in ["VARCHAR", "CHAR"] and column.mapKeyDataLength >=0 %}
          mapKeyDataLength: ${{column.mapKeyDataLength}}
          {% endif %}
          {% if column.mapValueType in ["VARCHAR", "CHAR"] and column.mapValueDataLength >=0 %}
          mapValueDataLength: ${{column.mapValueDataLength}}
          {% endif %}
          {% if column.mapKeyType == "DECIMAL" and column.mapKeyPrecision >=0 %}
          mapKeyPrecision: ${{column.mapKeyPrecision}}
          {% endif %}
          {% if column.mapValueType == "DECIMAL" and column.mapValuePrecision >=0 %}
          mapValuePrecision: ${{column.mapValuePrecision}}
          {% endif %}
          {% if column.mapKeyType == "DECIMAL" and column.mapKeyScale >= 0 %}
          mapKeyScale: ${{column.mapKeyScale}}
          {% endif %}
          {% if column.mapValueType == "DECIMAL" and column.mapValueScale >= 0 %}
          mapValueScale: ${{column.mapValueScale}}
          {% endif %}
      {% endif %}

          tags: {% if column.businessTerms | length > 0 %}{% for i in column.businessTerms %}
            - tagFQN: ${{ i }}
              source: Glossary
              labelType: Manual
              state: Confirmed
          {% endfor %}{% else %}[]{% endif %}
      {% endfor %}{% else %}[]{% endif %}
      quality: {% if values.dataQuality | length > 0 %}
      {% for check in values.dataQuality %}
        - type: "custom"
          engine: "sifflet"
          implementation:
            name: ${{ check.monitorName }}
            description: ${{ check.description }}
            schedule: "@daily"          # Defined as @hourly/@daily/@weekly/@monthly/@yearly (default to midnight UTC) or CRON expression.
            scheduleTimezone: "UTC"     # (optional - default null) Schedule Time Zone, i.e. Europe/Paris
            incident:
              severity: ${{ check.severity }}   # (REQUIRED) Severity of the incident "Low" | "Moderate" | "High" | "Critical"
              createOnFailure: false
            parameters:
              kind: {% if check.monitorKind == "Nulls" %}FieldNulls {% elif check.monitorKind == "Unique" %}FieldDuplicates {% elif check.monitorKind == "Schema change" %}SchemaChange {% elif check.monitorKind == "Row level duplicates" %}RowDuplicates {% else %}WrongKind{% endif %}
              {% if check.monitorKind == "Nulls" %}
              field: ${{ check.columnName.label | dump }}
              {% if check.nullValues == "Null, empty and whitespaces" %}
              nullValues: NullEmptyAndWhitespaces
              {% elif check.nullValues == "Null and empty" %}
              nullValues: NullAndEmpty
              {% endif %}
              threshold:
                kind: Static
                valueMode: Percentage
                max: ${{ check.threshold }}%
              {% elif check.monitorKind == "Unique" %}
              field: ${{ check.columnName.label | dump }}
              {% elif check.monitorKind == "Row level duplicates" %}
              threshold:
                kind: Static
                valueMode: Percentage
                max: ${{ check.threshold }}%
              {% endif %}
      {% endfor %}{% else %}[]{% endif %}

      termsAndConditions: ${{ values.termsAndConditions | dump }}
      endpoint: ${{ values.endpoint | dump }}
      SLA:
        intervalOfChange: ${{ values.intervalOfChange }}
        timeliness: ${{ values.timeliness }}
        upTime: ${{ values.upTime }}
    dataSharingAgreement:
      purpose: ${{ values.purpose | dump }}
      billing: ${{ values.billing | dump }}
      security: ${{ values.security | dump }}
      intendedUsage: ${{ values.intendedUsage | dump }}
      limitations: ${{ values.limitations | dump }}
      lifeCycle: ${{ values.lifeCycle | dump }}
      confidentiality: ${{ values.confidentiality | dump }}
    tags: []
    sampleData: {}
    semanticLinking: []
    specific:
      storageAreaId: ${{ values.storageArea | dump }}
      sourceTable:
        catalog: ${{ values.catalog | dump }}
        name: ${{ values.sourceTableName | dump }}
        tableFormat: ${{ values.tableFormat | dump }}
      view:
        catalog: ${{ values.catalog | dump }}
        name: ${{ componentName }}
