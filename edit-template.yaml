# it is important to use this apiVersion
apiVersion: witboost.com/v1
kind: EditTemplate
metadata:
  name: edit-outputport-athena
  title: Athena Output Port Edit Template
  description: Edit an Athena Output Port
  tags:
    - edit
    - output-port
    - aws
    - athena
spec:
  owner: agilelab
  useCaseTemplateId:
    - urn:dmb:utm:aws-athena-template:0.0.0
  parameters:
    - title: Update Output Port
      description: |
        This wizard will allow you to edit the metadata for a previously created Output Port.
        
        Most metadata is editable but some (like the name, domain, data product etc) are not; their fields will be read-only.
        
        Some of the files in the component's repository cannot be updated by this wizard, namely:
        - **Documentation**: `README.md`, `docs/index.md`, etc
        - **CI/CD**: `.gitlab-ci-yaml`
        You need to take care of updating these yourself, as given their nature it's hard to do automatically and they are often edited manually after the component's creation.

    - title: Update component metadata
      description: Update basic information for this component
      required:
        - description
        - storageArea
      properties:
        name:
          title: Name
          type: string
          description: Not editable. The name of the component.
          ui:disabled: true
        description:
          title: Description
          type: string
          description: Required. Help others understand what this component is for. What data will it expose?
        domain:
          title: Domain
          type: string
          description: Not editable. Domain of the Data Product this component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
          ui:disabled: true
        dataproduct:
          title: Data Product
          type: string
          description: Not editable. Data Product this component belongs to
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
          ui:disabled: true
        identifier:
          title: Identifier
          type: string
          description: Not editable. Autogenerated from the information above. A unique identifier for the component. It will not be editable after creation and is a string composed of [a-zA-Z] separated by any of [-_].
          ui:disabled: true
        developmentGroup:
          title: Development Group
          type: string
          description: Automatically selected from the Data Product metadata. Data Product development group.
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        storageArea:
          title: Storage component dependency
          description: AWS Athena output port component must depend on a S3 Storage area component used as query output location
          type: string
          ui:field: EntityRelationsPicker
          ui:fieldName: dataproduct
          relation: hasPart
          ui:filters:
            - key: spec.mesh.useCaseTemplateId
              value: "urn:dmb:utm:aws-s3-template:0.0.0"
        dependsOn:
          title: Dependencies
          type: array
          description: A component could depend on other components in the same Data Product. This information will be used to deploy the components in such an order that their dependencies already exist.
          default: []
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: dataproduct
            relation: hasPart
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string

    - title: Update Terms & Conditions and SLA
      description: Update Terms & Conditions and Service Level Agreement information for this Data product.
      required:
        - termsAndConditions
        - intervalOfChange
        - timeliness
        - upTime
      properties:
        termsAndConditions:
          title: Terms and Conditions
          type: string
          description: Required. Terms and Conditions that apply to the data.
          default: Can be used for production purposes.
        intervalOfChange:
          title: Interval of change
          type: string
          description: Required. How often the data is refreshed.
          default: 2BD
        timeliness:
          title: Timeliness
          type: string
          description: Required. Timeliness of the data.
          default: 2BD
        upTime:
          title: Uptime
          type: string
          description: Required. Uptime of the Output Port.
          default: 99.9%

    - title: Update Data Sharing Agreement
      description: Update the Data Sharing Agreement clauses for this Data product.
      required:
        - purpose
        - billing
        - security
        - intendedUsage
        - limitations
        - lifeCycle
        - confidentiality
      properties:
        purpose:
          title: Purpose
          type: string
          description: Required. Purpose of the data.
          default: Foundational data for downstream sue cases.
        billing:
          title: Billing
          type: string
          description: Required. Billing applied to data usage.
          default: None.
        security:
          title: Security
          type: string
          description: Required. Security policies that apply to the data.
          default: Platform standard security policies.
        intendedUsage:
          title: Intended Usage
          type: string
          description: Required. Intended usage for the data.
          default: Any downstream use cases.
        limitations:
          title: Limitations
          type: string
          description: Required. Limitations of the data.
          default: Needs joining with other datasets (eg customer data) for most analytical use cases.
        lifeCycle:
          title: Lifecycle
          type: string
          description: Required. Lifecycle of the data.
          default: Data loaded every two days and typically never deleted.
        confidentiality:
          title: Confidentiality
          type: string
          description: Required. Confidentiality of the data.
          default: None.

    - title: Data contract schema
      description: |-

        Define the schema of the Output Port view. Primitive data types supported.

        The **Data Contract** schema specifies the structure of the data that will be exposed through the Output Port.  
        This schema will serve two purposes:

        1. **Athena View Generation**: The Output Port will create an Athena view with the exact columns defined in this schema. If no columns are defined the view will include all the columns of the source table.
        2. **Source Table Creation (if needed)**: If the source table does not exist in the source database, it will be automatically created using this schema.

        The Data Contract ensures consistency and enforces a predefined structure.

        You can modify the Data Contract later in the **Edit** section.
      properties:
        tableFormat:
          type: string
          title: Table format
          ui:disabled: true

        warning:
          type: "null"
          description: "**Attention!** In the following table, you must select the **Athena type** corresponding to the type of the selected table format.
           [Supported data types for Iceberg tables in Athena](https://docs.aws.amazon.com/athena/latest/ug/querying-iceberg-supported-data-types.html)
           If you select a data type that is not supported by the selected table format, the validation of this component will fail."

        nestingWarning:
          type: "null"
          description: "**Nested structures** are supported only up to **2 levels**. If deeper nesting is required, it must be manually configured in `catalog-info.yml`."

        schemaDefinition:
          type: object
          ui:options:
            displayTitle: false
          properties:
            schemaColumns:
              title: Column Definitions
              type: array
              ui:ArrayFieldTemplate: ArrayTableTemplate
              items:
                type: object
                ui:ObjectFieldTemplate: TableRowTemplate
                required:
                  - name
                  - dataType
                properties:
                  name:
                    type: string
                    title: Name
                  description:
                    type: string
                    title: Description
                  dataType:
                    type: string
                    default: INT
                    title: Data Type
                    enum:
                      - BOOLEAN
                      - TINYINT
                      - SMALLINT
                      - INT
                      - BIGINT
                      - DOUBLE
                      - FLOAT
                      - DECIMAL
                      - CHAR
                      - VARCHAR
                      - STRING
                      - BINARY
                      - DATE
                      - TIMESTAMP
                      - TIMESTAMPTZ
                      - ARRAY
                      - MAP
                allOf:
                  - if:
                      properties:
                        dataType:
                          const: ARRAY
                    then:
                      required:
                        - arrayDataType
                      properties:
                        arrayDataType:
                          title: Array Data Type
                          description: Data type of the array elements
                          type: string
                          default: INT
                          enum:
                            - BOOLEAN
                            - TINYINT
                            - SMALLINT
                            - INT
                            - BIGINT
                            - DOUBLE
                            - FLOAT
                            - DECIMAL
                            - CHAR
                            - VARCHAR
                            - STRING
                            - BINARY
                            - DATE
                            - TIMESTAMP
                            - TIMESTAMPTZ
                            - ARRAY
                            - MAP
                      allOf:
                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: VARCHAR
                                  - const: CHAR
                          then:
                            properties:
                              dataLength:
                                title: Column Length
                                type: integer
                                description: Maximum length of column row
                                default: 65535
                            required:
                              - dataLength
                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: MAP
                          then:
                            properties:
                              arrayMapKeyType:
                                title: Array Map Key Data Type
                                description: Data type of the inner array elements
                                type: string
                                default: INT
                                enum:
                                  - BOOLEAN
                                  - TINYINT
                                  - SMALLINT
                                  - INT
                                  - BIGINT
                                  - DOUBLE
                                  - FLOAT
                                  - DECIMAL
                                  - CHAR
                                  - VARCHAR
                                  - STRING
                                  - BINARY
                                  - DATE
                                  - TIMESTAMP
                                  - TIMESTAMPTZ
                              arrayMapValueType:
                                title: Array Map Value Data Type
                                description: Data type of the inner array elements
                                type: string
                                default: INT
                                enum:
                                  - BOOLEAN
                                  - TINYINT
                                  - SMALLINT
                                  - INT
                                  - BIGINT
                                  - DOUBLE
                                  - FLOAT
                                  - DECIMAL
                                  - CHAR
                                  - VARCHAR
                                  - STRING
                                  - BINARY
                                  - DATE
                                  - TIMESTAMP
                                  - TIMESTAMPTZ

                            allOf:
                              - if:
                                  properties:
                                    arrayMapKeyType:
                                      oneOf:
                                        - const: CHAR
                                        - const: VARCHAR
                                then:
                                  properties:
                                    arrayMapKeyDataLength:
                                      title: Array Map Key Data Length
                                      type: integer
                                      description: Maximum length for the Array Map Key CHAR/VARCHAR type.
                                      default: 65535
                                  required:
                                    - arrayMapKeyDataLength
                              - if:
                                  properties:
                                    arrayMapKeyType:
                                      const: DECIMAL
                                then:
                                  properties:
                                    arrayMapKeyPrecision:
                                      title: Array Map Key Decimal Precision
                                      type: integer
                                      description: Precision for the Array Map Key DECIMAL type.
                                      minimum: 1
                                      maximum: 38
                                      default: 38
                                    arrayMapKeyScale:
                                      title: Array Map Key Decimal Scale
                                      type: integer
                                      description: Scale for the Array Map Key DECIMAL type; cannot be greater than precision minus 1.
                                      minimum: 0
                                      maximum: 37
                                      default: 0
                                  required:
                                    - arrayMapKeyPrecision
                                    - arrayMapKeyScale
                              - if:
                                  properties:
                                    arrayMapValueType:
                                      oneOf:
                                        - const: CHAR
                                        - const: VARCHAR
                                then:
                                  properties:
                                    arrayMapValueDataLength:
                                      title: Array Map Value Data Length
                                      type: integer
                                      description: Maximum length for the Array Map Value CHAR/VARCHAR type.
                                      default: 65535
                                  required:
                                    - arrayMapValueDataLength
                              - if:
                                  properties:
                                    arrayMapValueType:
                                      const: DECIMAL
                                then:
                                  properties:
                                    arrayMapValuePrecision:
                                      title: Array Map Value Decimal Precision
                                      type: integer
                                      description: Precision for the Array Map Value DECIMAL type.
                                      minimum: 1
                                      maximum: 38
                                      default: 38
                                    arrayMapValueScale:
                                      title: Array Map Value Decimal Scale
                                      type: integer
                                      description: Scale for the Array Map Value DECIMAL type; cannot be greater than precision minus 1.
                                      minimum: 0
                                      maximum: 37
                                      default: 0
                                  required:
                                    - arrayMapValuePrecision
                                    - arrayMapValueScale

                            required:
                              - arrayMapKeyType
                              - arrayMapValueType

                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: DECIMAL
                          then:
                            properties:
                              precision:
                                title: Precision
                                type: integer
                                description: Precision of the numeric data type
                                minimum: 1
                                maximum: 38
                                default: 38
                              scale:
                                title: Scale
                                type: integer
                                description: Scale of the numeric data type; cannot be greater than precision minus 1
                                minimum: 0
                                maximum: 37
                                default: 0
                            required:
                              - precision
                              - scale

                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: ARRAY
                          then:
                            required:
                              - nestedArrayDataType
                            properties:
                              nestedArrayDataType:
                                title: Nested Array Data Type
                                description: Data type of the inner array elements
                                type: string
                                default: INT
                                enum:
                                  - BOOLEAN
                                  - TINYINT
                                  - SMALLINT
                                  - INT
                                  - BIGINT
                                  - DOUBLE
                                  - FLOAT
                                  - DECIMAL
                                  - CHAR
                                  - VARCHAR
                                  - STRING
                                  - BINARY
                                  - DATE
                                  - TIMESTAMP
                                  - TIMESTAMPTZ
                            allOf:
                              - if:
                                  properties:
                                    nestedArrayDataType:
                                      const: DECIMAL
                                then:
                                  properties:
                                    nestedPrecision:
                                      title: Nested Decimal Precision
                                      type: integer
                                      description: Precision for the nested DECIMAL type.
                                      minimum: 1
                                      maximum: 38
                                      default: 38
                                    nestedScale:
                                      title: Nested Decimal Scale
                                      type: integer
                                      description: Scale for the nested DECIMAL type; cannot be greater than precision minus 1.
                                      minimum: 0
                                      maximum: 37
                                      default: 0
                                  required:
                                    - nestedPrecision
                                    - nestedScale
                              - if:
                                  properties:
                                    nestedArrayDataType:
                                      oneOf:
                                        - const: CHAR
                                        - const: VARCHAR
                                then:
                                  properties:
                                    nestedDataLength:
                                      title: Nested Data Length
                                      type: integer
                                      description: Maximum length for the nested CHAR/VARCHAR type.
                                      default: 65535
                                  required:
                                    - nestedDataLength
                  - if:
                      properties:
                        dataType:
                          const: MAP
                    then:
                      required:
                        - mapKeyType
                        - mapValueType
                      properties:
                        mapKeyType:
                          title: Key Type
                          type: string
                          description: Data type of the map keys
                          default: INT
                          enum:
                            - BOOLEAN
                            - TINYINT
                            - SMALLINT
                            - INT
                            - BIGINT
                            - DOUBLE
                            - FLOAT
                            - DECIMAL
                            - CHAR
                            - VARCHAR
                            - STRING
                            - BINARY
                            - DATE
                            - TIMESTAMP
                            - TIMESTAMPTZ
                        mapValueType:
                          title: Value Type
                          type: string
                          description: Data type of the map values
                          default: INT
                          enum:
                            - BOOLEAN
                            - TINYINT
                            - SMALLINT
                            - INT
                            - BIGINT
                            - DOUBLE
                            - FLOAT
                            - DECIMAL
                            - CHAR
                            - VARCHAR
                            - STRING
                            - BINARY
                            - DATE
                            - TIMESTAMP
                            - TIMESTAMPTZ
                      allOf:
                        - if:
                            properties:
                              mapKeyType:
                                oneOf:
                                  - const: CHAR
                                  - const: VARCHAR
                          then:
                            properties:
                              mapKeyDataLength:
                                title: Map Key Data Length
                                type: integer
                                description: Maximum length for the map key CHAR/VARCHAR type.
                                default: 65535
                            required:
                              - mapKeyDataLength
                        - if:
                            properties:
                              mapKeyType:
                                const: DECIMAL
                          then:
                            properties:
                              mapKeyPrecision:
                                title: Map Key Decimal Precision
                                type: integer
                                description: Precision for the map key DECIMAL type.
                                minimum: 1
                                maximum: 38
                                default: 38
                              mapKeyScale:
                                title: Map Key Decimal Scale
                                type: integer
                                description: Scale for the map key DECIMAL type; cannot be greater than precision minus 1.
                                minimum: 0
                                maximum: 37
                                default: 0
                            required:
                              - mapKeyPrecision
                              - mapKeyScale
                        - if:
                            properties:
                              mapValueType:
                                oneOf:
                                  - const: CHAR
                                  - const: VARCHAR
                          then:
                            properties:
                              mapValueDataLength:
                                title: Map Value Data Length
                                type: integer
                                description: Maximum length for the map value CHAR/VARCHAR type.
                                default: 65535
                            required:
                              - mapValueDataLength
                        - if:
                            properties:
                              mapValueType:
                                const: DECIMAL
                          then:
                            properties:
                              mapValuePrecision:
                                title: Map Value Decimal Precision
                                type: integer
                                description: Precision for the map value DECIMAL type.
                                minimum: 1
                                maximum: 38
                                default: 38
                              mapValueScale:
                                title: Map Value Decimal Scale
                                type: integer
                                description: Scale for the map value DECIMAL type; cannot be greater than precision minus 1.
                                minimum: 0
                                maximum: 37
                                default: 0
                            required:
                              - mapValuePrecision
                              - mapValueScale

                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: VARCHAR
                            - const: CHAR
                    then:
                      properties:
                        dataLength:
                          title: Column Length
                          type: integer
                          description: Maximum length of column row
                          default: 65535
                      required:
                        - dataLength
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: DECIMAL
                    then:
                      properties:
                        precision:
                          title: Precision
                          type: integer
                          description: Precision of the numeric data type
                          minimum: 1
                          maximum: 38
                          default: 38
                        scale:
                          title: Scale
                          type: integer
                          description: Scale of the numeric data type; cannot be greater than precision minus 1
                          minimum: 0
                          maximum: 37
                          default: 0
                      required:
                        - precision
                        - scale
                  - if: true
                    then:
                      properties:
                        businessTerms:
                          title: Business Terms
                          type: array
                          description: Multiple selection for fixed tags
                          uniqueItems: true
                          ui:style:
                            minWidth: 400
                          items:
                            type: string
                            enum:
                              - Raw
                              - Derived
                              - Metadata
                              - Identifier
                              - Dimension
                              - Fact


    - title: Data quality
      description: |-
        Sifflet monitors enable you to apply quality criteria on top of your table/fields based on chosen variables. Here you can define multiple monitors, based on the defined schema.

        If you add data quality constraints, **remember to also add to the Data Product a Sifflet workload and to include this output port as its dependency.**
        
        **Attention:** Updating a monitor, you will lose any monitoring history that is already present.
      properties:
        dataQuality:
          title: Data quality constraints (Sifflet Monitors definition)
          type: array
          ui:ArrayFieldTemplate: ArrayTableTemplate
          items:
            type: object
            ui:ObjectFieldTemplate: TableRowTemplate
            required:
              - monitorKind
              - monitorName
              - severity
            properties:
              properties:
                monitorName:
                  title: Monitor name
                  type: string
              monitorKind:
                title: Monitor kind
                type: string
                default: Nulls
                enum:
                  - Nulls
                  - Unique
                  - 'Schema change'
                  - 'Row level duplicates'
              description:
                title: Description
                type: string
              severity:
                title: Severity
                type: string
                default: Low
                enum:
                  - Low
                  - Moderate
                  - High
                  - Critical

            allOf:
              - if:
                  properties:
                    monitorKind:
                      const: Nulls
                then:
                  required:
                      - columnName
                      - threshold
                  properties:
                    columnName:
                      title: Column to monitor
                      type: object
                      ui:field: DescriptorPicker
                      sourceType: field
                      source: schemaDefinition
                      optionsAt: schemaColumns
                      optionsDisplayNameAt: name
                      ui:options:
                        allowArbitraryValues: false
                    nullValues:
                      title: Null values
                      type: string
                      description: "Operator for threshold comparison"
                      enum:
                        - 'Null'
                        - 'Null and empty'
                        - 'Null, empty and whitespaces'
                    threshold:
                      title: Threshold
                      type: number
                      description: "Threshold for null values in percentage"
                      minimum: 0
                      maximum: 100
                      default: 0
              - if:
                  properties:
                    monitorKind:
                      const: Unique
                then:
                  required:
                      - columnName
                  properties:
                    columnName:
                      title: Column Name
                      type: object
                      ui:field: DescriptorPicker
                      sourceType: field
                      source: schemaDefinition
                      optionsAt: schemaColumns
                      optionsDisplayNameAt: name
                      ui:options:
                        allowArbitraryValues: false
              - if:
                  properties:
                    monitorKind:
                      const: 'Row level duplicates'
                then:
                  properties:
                    threshold:
                      title: Threshold
                      type: number
                      description: "Threshold for row level duplicates percentage"
                      minimum: 0
                      maximum: 100
                      default: 0

    - title: Output port deployment information
      required:
        - sourceTableName
      description: |-
        The Output Port will create an Athena view based on the specified source table. 

        The source database is the internal database of the Data Product, created with the following naming convention: **'domain_environment_dataProduct_vDataProductMajorVersion_internal'**.
        
        If the internal database of the Data Product does not exist, it will be automatically created. 
        Similarly, if the source table is not present, it will be generated within the database, using the schema defined in the **Data Contract** section.
      properties:
        sourceTableName:
          title: Source Table Name
          type: string
          description: Name of the source table that will be used to create the Output Port view.


  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./edit-skeleton
        targetPath: '.'
        values:
          domain: '${{ parameters.domain }}'
          dataproduct: '${{ parameters.dataproduct }}'
          identifier: '${{ parameters.identifier }}'
          description: '${{ parameters.description }}'
          dependsOn: '${{ parameters.dependsOn }}'
          developmentGroup: '${{ parameters.developmentGroup }}'
          storageArea: '${{ parameters.storageArea }}'
          tags: '${{ values.tags }}'
          processDescription: '${{ parameters.processDescription }}'
          intervalOfChange: '${{ parameters.intervalOfChange }}'
          timeliness: '${{ parameters.timeliness }}'
          upTime: '${{ parameters.upTime }}'
          termsAndConditions: '${{ parameters.termsAndConditions }}'
          endpoint: '${{ parameters.endpoint }}'
          schemaColumns: '${{ parameters.schemaDefinition.schemaColumns }}'
          dataQuality: '${{parameters.dataQuality}}'
          purpose: '${{ parameters.purpose }}'
          billing: '${{ parameters.billing }}'
          security: '${{ parameters.security }}'
          intendedUsage: '${{ parameters.intendedUsage }}'
          limitations: '${{ parameters.limitations }}'
          lifeCycle: '${{ parameters.lifeCycle }}'
          confidentiality: '${{ parameters.confidentiality }}'
          sourceTableName: '${{ parameters.sourceTableName }}'
          creationDate: '${{ parameters.creationDate }}'
